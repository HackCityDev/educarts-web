@use "../General/General.module.scss" as General;
@mixin Mobile($width) {
  @media (max-width: 900px) {
    flex-direction: column !important;
    max-width: $width;
  }
}
$background-images: (
  "../../public/bg1.png",
  "../../public/bg1.png",
  "../../public/bg1.png"
);
.Index {
  position: relative;
}
.Hero {
  position: relative;
  .ImageContainer {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
  }
  .HeroMain {
    z-index: 3;
    position: relative;
    background: linear-gradient(
      90deg,
      rgba(231, 227, 224, 0.99) 50.51%,
      rgba(231, 227, 224, 0.610689) 84%,
      rgba(231, 227, 224, 0.01) 101.57%
    );
    @include General.BOX();
    width: 70%;
    min-height: 100vh;
    padding: General.$leftRight;
    padding-right: 0;
    .dummy {
      display: flex;
      gap: 1rem;
      .dummyActive {
        background: #17324f;
      }
      .dummyActiveNext {
        background: #6a839f;
      }
      .dummyInactive {
        background: #e9edf1;
      }
      span {
        width: 10px;
        height: 10px;
        background: #e9edf1;
        border: 1.13027px solid #98aabd;
        border-radius: 50%;
      }
    }
    h1,
    p {
      width: 70%;
    }
    p {
      font-weight: 500;
    }
    @media (min-width: General.$breakpoint-tablet) {
      h1 {
        font-size: clamp(2.3rem, 3.5rem, 4rem);
        line-height: clamp(2.5rem, 3.2rem, 5.5rem);
      }
    }
    @media (max-width: 900px) {
      width: 80%;
      h1,
      p {
        width: 100%;
      }
    }
  }
}
.Service {
  padding: 30px General.$leftRight;
  @include General.BOX();
  @include General.PaddingBoxTopAndBottom;
  .ServiceHeader {
    position: relative;
    width: 100%;
    text-align: center;
  }
  .Services {
    @include General.Flex();
    gap: 10px;
    .service {
      width: 33%;
      display: flex;
      gap: 1rem;
      flex-direction: column;
      p {
        font-weight: 600;
        text-align: center;
        color: #1d4065;
      }
      .serviceImage {
        overflow: hidden;
        border-radius: 8px;
        width: 100%;
        position: relative;
        padding-top: 80%;
      }
    }
    @media (max-width: 900px) {
      flex-direction: column;
      gap: 2rem;
      .service {
        width: 100%;
        max-width: 500px;
      }
    }
  }
}
.Work {
  padding: 1rem General.$leftRight;
  @include General.BOX();
  @include General.PaddingBoxTopAndBottom;
  .WorkHeader {
    text-align: center;
    position: relative;
    width: 100%;
    .line {
      position: absolute;
      width: 80%;
      height: 2px;
      background-color: #000;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
    }
    div {
      position: relative;
      z-index: 1;
      background-color: #fff;
      margin: 0 auto;
      width: fit-content;
      padding: 0 10px;
    }
  }
  .WorkBody {
    @include General.Flex();
    flex-direction: column;
    gap: 2rem;
    position: relative;
    .Blob {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 100%;
      padding-top: 100%;
    }
    aside {
      @include General.Flex();
      gap: 1rem;
      &:nth-child(odd) {
        flex-direction: row-reverse;
        .WorkContent {
          @media (min-width: 900px) {
            border-right: 1px solid rgba(152, 170, 189, 1);
            padding-right: 1rem;
          }
        }
        @media (min-width: General.$breakpoint-desktop) {
          gap: 2rem;
          .WorkContent {
            padding-right: 2rem;
          }
        }
      }
      &:nth-child(even) {
        gap: 2rem;
        @media (min-width: General.$breakpoint-desktop) {
          gap: 4rem;
        }
      }
      @media (min-width: General.$breakpoint-desktop) {
        gap: 4rem;
      }
      div {
        width: 50%;
        &:nth-child(1) {
          padding-top: 40%;
        }
        p {
          margin: calc(General.$globalGap / 2) 0;
          @media (min-width: General.$breakpoint-desktop) {
            margin: General.$globalGap 0;
          }
        }
      }
      @media (max-width: 900px) {
        flex-direction: column !important;
        div {
          width: 100%;
          button {
            margin: 0 auto;
            width: min(100%, 335px);
          }
        }
      }
    }
  }
}
.Testimony {
  @include General.BOX();
  position: relative;
  background: #12273d;
  box-shadow: 0px 8px 20px rgba(23, 30, 37, 0.4);
  .Blobs {
    position: absolute;
    z-index: 1;
    width: 100%;
    height: 100%;
    overflow: hidden;
    display: flex;
    opacity: 0.1;
    img {
      position: absolute;
      &:nth-child(1) {
        top: -110px;
        left: 50%;
        transform: translateX(-50%);
      }
      &:nth-child(2) {
        bottom: -100px;
        left: -210px;
      }
      &:nth-child(3) {
        bottom: -110px;
        right: -200px;
      }
    }
  }
  .Main {
    padding: 30px General.$leftRight;
    z-index: 2;
    width: 100%;
    @include General.BOX;
    & > div:nth-child(1) {
      width: 100%;
    }
  }
}
.Start {
  padding: 30px General.$leftRight;
  @include General.BOX();
  @include General.PaddingBoxTopAndBottom;
  align-items: center;
  background-color: #f4f9fa;
  .Steps {
    @include General.Flex();
    gap: 1.5rem;
    .Step {
      @include General.BOX();
      align-items: center;
      text-align: center;
      line-height: 38px;
      // align-self: baseline;
      align-self: auto;
      h1 {
        font-weight: 700;
        // font-size: 20px;`
        font-feature-settings: "pnum" on, "lnum" on;
        color: #4d6b8c;
      }
      p {
        font-weight: 500;
        // font-size: 19px;
        color: #12273d;
      }
    }
    @include Mobile(500px);
  }
}
.Download {
  @include General.Flex();
  padding: 0 General.$leftRight;
  gap: 1rem;
  @media (min-width: General.$breakpoint-desktop) {
    gap: 2rem;
  }
  aside {
    &:nth-child(1) {
      @include General.BOX();
      align-items: center;
      flex: 6;
      text-align: left;
      margin: 1rem 0;
      align-self: baseline;
      div {
        display: flex;
        width: 100%;
        gap: 10px;
      }
    }
    &:nth-child(2) {
      flex: 4;
      display: flex;
      align-self: flex-end;
      height: 42%;
      margin-top: 10px;
      margin-bottom: -12px;
      @media (min-width: 900px) {
        height: auto;
        padding-top: 42% !important;
      }
    }
  }
  @include Mobile(max-content);
}
// @for $i from 3 through length($background-images) {
//   &:nth-child(#{$i - 1}):after {
//     background-image: url(nth($background-images, $i));
//     animation-delay: #{($i - 2) * 5}s;
//   }
// }
